services:
  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      - stockfellow-net
    volumes:
      - redis_data:/data
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    command: redis-server ${REDIS_PASSWORD:+--requirepass $REDIS_PASSWORD}
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  # PostgreSQL Database for Keycloak
  postgres:
    image: postgres:15
    container_name: keycloak-postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:5432"
    networks:
      - stockfellow-net
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5


  # PostgreSQL database for User Service
  user-service-postgres:
    image: postgres:15
    container_name: user-service-postgres
    volumes:
      - user_service_postgres_data:/var/lib/postgresql/data
      - ./services/user-service/init-scripts:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_DB: userservice_db
      POSTGRES_USER: userservice_user
      POSTGRES_PASSWORD: userservice_pass
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5433:5432"
    networks:
      - stockfellow-net
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "userservice_user", "-d", "userservice_db"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # PostgreSQL Database for Notification Service
  notification-postgres:
    image: postgres:15
    container_name: notification-postgres
    volumes:
      - notification_postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: notification_db
      POSTGRES_USER: notification_user
      POSTGRES_PASSWORD: notification_pass
    ports:
      - "5440:5432"
    networks:
      - stockfellow-net
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "notification_user", "-d", "notification_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  # PostgreSQL Database for Alfresco
  alfresco-postgres:
    image: postgres:15
    container_name: alfresco-postgres
    volumes:
      - alfresco_postgres_data:/var/lib/postgresql/data
      - ./alfresco/init-scripts:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_DB: alfresco
      POSTGRES_USER: alfresco
      POSTGRES_PASSWORD: alfresco123
      POSTGRES_MULTIPLE_DATABASES: alfresco,activiti
    ports:
      - "5435:5432"
    networks:
      - stockfellow-net
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "alfresco"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ActiveMQ
  activemq:
    image: apache/activemq-artemis:latest-alpine
    container_name: activemq
    ports:
      - "61616:61616"  # OpenWire protocol
      - "8161:8161"    # Web console
      - "5672:5672"    # AMQP
    environment:
      ARTEMIS_USER: admin
      ARTEMIS_PASSWORD: admin
    networks:
      - stockfellow-net
    volumes:
      - activemq_data:/var/lib/artemis-instance
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8161/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Alfresco Search Services (Solr6)
  alfresco-search:
    image: alfresco/alfresco-search-services:2.0.8.1
    container_name: alfresco-search
    environment:
      SOLR_ALFRESCO_HOST: alfresco-content-repository
      SOLR_ALFRESCO_PORT: 8080
      SOLR_SOLR_HOST: alfresco-search
      SOLR_SOLR_PORT: 8983
      SOLR_CREATE_ALFRESCO_DEFAULTS: alfresco,archive
      ALFRESCO_SECURE_COMMS: secret
      JAVA_TOOL_OPTIONS: "-Dalfresco.secureComms.secret=secret"
    ports:
      - "8983:8983"
    networks:
      - stockfellow-net
    volumes:
      - alfresco_search_data:/opt/alfresco-search-services/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8983/solr/admin/cores"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # Alfresco Content Repository
  alfresco-content-repository:
    image: alfresco/alfresco-content-repository-community:23.2.1
    container_name: alfresco-content-repository
    depends_on:
      - alfresco-postgres
      - alfresco-search
    environment:
      JAVA_TOOL_OPTIONS: >-
        -Dencryption.keystore.type=JCEKS
        -Dencryption.cipherAlgorithm=DESede/CBC/PKCS5Padding
        -Dencryption.keyAlgorithm=DESede
        -Dencryption.keystore.location=/usr/local/tomcat/shared/classes/alfresco/extension/keystore/keystore
        -Dmetadata-keystore.password=mp6yc0UD9e
        -Dmetadata-keystore.aliases=metadata
        -Dmetadata-keystore.metadata.password=oKIWzVdEdA
        -Dmetadata-keystore.metadata.algorithm=DESede
      JAVA_OPTS: >-
        -Ddb.driver=org.postgresql.Driver
        -Ddb.username=alfresco
        -Ddb.password=alfresco123
        -Ddb.url=jdbc:postgresql://alfresco-postgres:5432/alfresco
        -Dsolr.host=alfresco-search
        -Dsolr.port=8983
        -Dsolr.http.connection.timeout=1000
        -Dsolr.secureComms=secret
        -Dsolr.sharedSecret=secret
        -Dsolr.base.url=/solr
        -Dindex.subsystem.name=solr6
        -Dshare.host=127.0.0.1
        -Dshare.port=8080
        -Dalfresco.host=localhost
        -Dalfresco.port=8080
        -Daos.baseUrlOverwrite=http://localhost:8080/alfresco/aos
        -Dmessaging.broker.url="failover:(nio://activemq:61616)?timeout=3000&jms.useCompression=true"
        -Ddeployment.method=DOCKER_COMPOSE
        -Dtransform.service.enabled=false
        -Dlegacy.transform.service.enabled=false
        -Dcsrf.filter.enabled=false
        -Dalfresco.restApi.basicAuthScheme=true
        -Dauthentication.protection.enabled=false
        -XX:MinRAMPercentage=50
        -XX:MaxRAMPercentage=80
    ports:
      - "8080:8080"
    networks:
      - stockfellow-net
    volumes:
      - alfresco_acs_data:/usr/local/tomcat/alf_data
      - ./alfresco/keystore:/usr/local/tomcat/shared/classes/alfresco/extension/keystore
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/alfresco/api/-default-/public/alfresco/versions/1/probes/-ready-"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 120s

  # Alfresco Share (Optional Web UI)
  alfresco-share:
    image: alfresco/alfresco-share:23.2.1
    container_name: alfresco-share
    depends_on:
      - alfresco-content-repository
    environment:
      REPO_HOST: "alfresco-content-repository"
      REPO_PORT: "8080"
      JAVA_OPTS: >-
        -XX:MinRAMPercentage=50
        -XX:MaxRAMPercentage=80
        -Dalfresco.host=localhost
        -Dalfresco.port=8080
        -Dalfresco.context=alfresco
        -Dalfresco.protocol=http
    ports:
      - "8081:8080"
    networks:
      - stockfellow-net
    volumes:
      - alfresco_share_data:/usr/local/tomcat/shared/classes/alfresco/web-extension

  # Keycloak 
  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      KC_DB: ${KC_DB}
      KC_DB_URL: ${KC_DB_URL}
      KC_DB_USERNAME: ${KC_DB_USERNAME}
      KC_DB_PASSWORD: ${KC_DB_PASSWORD}
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_SPI_EVENTS_LISTENER_USER_SYNC_EVENT_LISTENER_USER_SERVICE_URL: ${USER_SERVICE_URL}
      KC_LOG_LEVEL: ${KEYCLOAK_LOG_LEVEL:-INFO}
    ports:
      - "${KEYCLOAK_PORT}:8080"
    networks:
      - stockfellow-net
    volumes:
      - ./services/api-gateway/realm-exports:/opt/keycloak/data/import
      - ./keycloak-extensions/:/opt/keycloak/providers/
    command: start-dev --import-realm

  # API Gateway (Java Spring Boot)
  api-gateway:
    build:
      context: ./services/api-gateway
      dockerfile: Dockerfile
    container_name: api-gateway
    depends_on:
      - keycloak
      - redis
      - alfresco-content-repository
    ports:
      - "${API_GATEWAY_PORT}:3000"
      - "${API_GATEWAY_DEBUG_PORT}:5007"
    environment:
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}
      - KEYCLOAK_AUTH_SERVER_URL=${KEYCLOAK_AUTH_SERVER_URL}
      - KEYCLOAK_REALM=${KEYCLOAK_REALM}
      - KEYCLOAK_GATEWAY_CLIENT_ID=${KEYCLOAK_GATEWAY_CLIENT_ID}
      - KEYCLOAK_GATEWAY_CLIENT_SECRET=${KEYCLOAK_GATEWAY_CLIENT_SECRET}
      - KEYCLOAK_FRONTEND_CLIENT_ID=${KEYCLOAK_FRONTEND_CLIENT_ID}
      - KEYCLOAK_FRONTEND_REDIRECT_URI=${KEYCLOAK_FRONTEND_REDIRECT_URI}
      - KEYCLOAK_ADMIN_USERNAME=${KEYCLOAK_ADMIN_USERNAME}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}
      - KEYCLOAK_ADMIN_REALM=${KEYCLOAK_ADMIN_REALM}
      - KEYCLOAK_ADMIN_CLIENT_ID=${KEYCLOAK_ADMIN_CLIENT_ID}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - ALFRESCO_BASE_URL=${ALFRESCO_BASE_URL:-http://alfresco-content-repository:8080/alfresco}
      - ALFRESCO_USERNAME=${ALFRESCO_USERNAME:-admin}
      - ALFRESCO_PASSWORD=${ALFRESCO_PASSWORD:-admin}
      - JVM_OPTS=${JVM_OPTS}
      - LOGGING_LEVEL_ROOT=${ROOT_LOG_LEVEL:-WARN}
      - LOGGING_LEVEL_COM_STOCKFELLOW=${LOG_LEVEL:-INFO}
    networks:
      - stockfellow-net
    volumes:
      - ./services/api-gateway/src:/app/src
      - ./services/api-gateway/src/main/resources/keycloak.json:/app/src/main/resources/keycloak.json
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/actuator/health"]
      interval: ${HEALTH_CHECK_INTERVAL:-30s}
      timeout: ${HEALTH_CHECK_TIMEOUT:-10s}
      retries: ${HEALTH_CHECK_RETRIES:-3}
      start_period: ${HEALTH_CHECK_START_PERIOD:-40s}

  # User Service (Spring Boot)
  user-service:
    build:
      context: ./services/user-service
      dockerfile: Dockerfile
    container_name: user-service
    depends_on:
      - user-service-postgres
      - keycloak
      - alfresco-content-repository
    ports:
      - "${USER_SERVICE_PORT}:4000"
      - "${USER_SERVICE_DEBUG_PORT}:5005"
    environment:
      - SPRING_PROFILES_ACTIVE=${USER_SERVICE_SPRING_PROFILE:-docker}
      - POSTGRES_HOST=user-service-postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=userservice_db
      - POSTGRES_USER=userservice_user
      - POSTGRES_PASSWORD=userservice_pass
      - KEYCLOAK_JWKS_URI=${KEYCLOAK_JWKS_URI}
      - KEYCLOAK_ISSUER=${KEYCLOAK_ISSUER}
      - ALFRESCO_BASE_URL=${ALFRESCO_BASE_URL:-http://alfresco-content-repository:8080/alfresco}
      - ALFRESCO_USERNAME=${ALFRESCO_USERNAME:-admin}
      - ALFRESCO_PASSWORD=${ALFRESCO_PASSWORD:-admin}
      - ALFRESCO_SITE_NAME=${ALFRESCO_SITE_NAME:-stockfellow}
      - JVM_OPTS=${USER_SERVICE_JVM_OPTS:--agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005}
      - LOGGING_LEVEL_ROOT=${ROOT_LOG_LEVEL:-WARN}
      - LOGGING_LEVEL_COM_STOCKFELLOW=${LOG_LEVEL:-INFO}
      - JPA_SHOW_SQL=${JPA_SHOW_SQL:-false}
      - SPRING_WEB_LOG_LEVEL=${SPRING_WEB_LOG_LEVEL:-INFO}
      - HIBERNATE_SQL_LOG_LEVEL=${HIBERNATE_SQL_LOG_LEVEL:-WARN}
    networks:
      - stockfellow-net
    volumes:
      - ./services/user-service/src:/app/src
      - ./services/user-service/pom.xml:/app/pom.xml
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/actuator/health"]
      interval: ${HEALTH_CHECK_INTERVAL:-30s}
      timeout: ${HEALTH_CHECK_TIMEOUT:-10s}
      retries: ${HEALTH_CHECK_RETRIES:-3}
      start_period: ${HEALTH_CHECK_START_PERIOD:-40s}
    restart: unless-stopped
  
  # Group Service (Spring Boot)
  group-service:
    build:
      context: ./services/group-service
      dockerfile: Dockerfile
    container_name: group-service
    depends_on:
      - keycloak
      - user-service
    ports:
      - "${GROUP_SERVICE_PORT}:4040"
      - "${GROUP_SERVICE_DEBUG_PORT}:5006"
    environment:
      - SERVER_PORT=${GROUP_SERVICE_PORT}
      - SPRING_PROFILES_ACTIVE=${GROUP_SERVICE_SPRING_PROFILE}
      - MONGODB_URI=${GROUP_SERVICE_MONGODB_URI}
      - KEYCLOAK_ISSUER=${KEYCLOAK_ISSUER}
      - KEYCLOAK_JWKS_URI=${KEYCLOAK_JWKS_URI}
      - USER_SERVICE_URL=${USER_SERVICE_URL}
      - JVM_OPTS=${GROUP_SERVICE_JVM_OPTS}
      - LOGGING_LEVEL_ROOT=${ROOT_LOG_LEVEL:-WARN}
      - LOGGING_LEVEL_COM_STOCKFELLOW=${LOG_LEVEL:-INFO}
    networks:
      - stockfellow-net
    volumes:
      - ./services/group-service/src:/app/src
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4040/actuator/health"]
      interval: ${HEALTH_CHECK_INTERVAL:-30s}
      timeout: ${HEALTH_CHECK_TIMEOUT:-10s}
      retries:  ${HEALTH_CHECK_RETRIES:-3}
      start_period: ${HEALTH_CHECK_START_PERIOD:-40s}

  # Transaction Service
  transaction-service:
    build:
      context: ./services/transaction-service
      dockerfile: Dockerfile
    container_name: transaction-service
    depends_on:
      - group-service
      - user-service
    ports:
      - "${TRANSACTION_SERVICE_PORT}:4080"
    environment:
      - SERVER_PORT=${TRANSACTION_SERVICE_PORT}
      - SPRING_PROFILES_ACTIVE=${TRANSACTION_SERVICE_SPRING_PROFILE}
      - TRANSACTIONDB_URI=${TRANSACTIONDB_URI}
      - KEYCLOAK_ISSUER=${KEYCLOAK_ISSUER}
      - KEYCLOAK_JWKS_URI=${KEYCLOAK_JWKS_URI}
      - USER_SERVICE_URL=${USER_SERVICE_URL}
      - GROUP_SERVICE_URL=${GROUP_SERVICE_URL}
      - JVM_OPTS=${TRANSACTION_SERVICE_JVM_OPTS}
      - LOGGING_LEVEL_ROOT=${ROOT_LOG_LEVEL:-WARN}
      - LOGGING_LEVEL_COM_STOCKFELLOW=${LOG_LEVEL:-INFO}
    networks:
      - stockfellow-net
    volumes:
      - ./services/transaction-service/src:/app/src
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4080/actuator/health"]
      interval: ${HEALTH_CHECK_INTERVAL:-30s}
      timeout: ${HEALTH_CHECK_TIMEOUT:-10s}
      retries: ${HEALTH_CHECK_RETRIES:-3}
      start_period: ${HEALTH_CHECK_START_PERIOD:-40s}

  # Notification Service
  notification-service:
    build:
      context: ./services/notification-service
      dockerfile: Dockerfile
    container_name: notification-service
    depends_on:
      - notification-postgres
      - activemq
      - group-service  
    ports:
      - "4050:4050"
      - "5008:5008"  # Debug port
    environment:
      - SERVER_PORT=4050
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://notification-postgres:5432/notification_db
      - SPRING_DATASOURCE_USERNAME=notification_user
      - SPRING_DATASOURCE_PASSWORD=notification_pass
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_DATABASE_PLATFORM=org.hibernate.dialect.PostgreSQLDialect
      - ACTIVEMQ_BROKER_URL=tcp://activemq:61616
      - ACTIVEMQ_USER=admin
      - ACTIVEMQ_PASSWORD=admin
      - SERVICES_GROUP_SERVICE_URL=http://group-service:4040
      - SERVICES_USER_SERVICE_URL=http://user-service:4000
      - JVM_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5008
      - LOGGING_LEVEL_ROOT=WARN
      - LOGGING_LEVEL_COM_STOCKFELLOW=INFO
    networks:
      - stockfellow-net
    volumes:
      - ./services/notification-service/src:/app/src
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4050/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    
# MFA Service (Spring Boot)
  mfa-service:
    build:
      context: ./services/mfa-service
      dockerfile: Dockerfile
    container_name: mfa-service
    depends_on:
      - keycloak
      - user-service
    ports:
      - "${MFA_SERVICE_PORT}:8087"  # Changed from 4090 to 8087
      - "${MFA_SERVICE_DEBUG_PORT}:5008"
    environment:
      - SERVER_PORT=8087  # Override to ensure port is 8087
      - SPRING_PROFILES_ACTIVE=${MFA_SERVICE_SPRING_PROFILE}
      - MONGODB_URI=${MFA_SERVICE_MONGODB_URI}
      - KEYCLOAK_ISSUER=${KEYCLOAK_ISSUER}
      - KEYCLOAK_JWKS_URI=${KEYCLOAK_JWKS_URI}
      - USER_SERVICE_URL=${USER_SERVICE_URL}
      - JVM_OPTS=${MFA_SERVICE_JVM_OPTS}
      - LOGGING_LEVEL_ROOT=${ROOT_LOG_LEVEL:-WARN}
      - LOGGING_LEVEL_COM_STOCKFELLOW=${LOG_LEVEL:-INFO}
      # Mail configuration
      - MFA_MAIL_HOST=${MFA_MAIL_HOST}
      - MFA_MAIL_PORT=${MFA_MAIL_PORT}
      - MFA_MAIL_USERNAME=${MFA_MAIL_USERNAME}
      - MFA_MAIL_PASSWORD=${MFA_MAIL_PASSWORD}
      - MFA_MAIL_FROM=${MFA_MAIL_FROM}
      - MFA_MAIL_STARTTLS=${MFA_MAIL_STARTTLS}
      - MFA_MAIL_SSL=${MFA_MAIL_SSL}
    networks:
      - stockfellow-net
    volumes:
      - ./services/mfa-service/src:/app/src
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8087/actuator/health"]
      interval: ${HEALTH_CHECK_INTERVAL:-30s}
      timeout: ${HEALTH_CHECK_TIMEOUT:-10s}
      retries: ${HEALTH_CHECK_RETRIES:-3}
      start_period: ${HEALTH_CHECK_START_PERIOD:-40s}

networks:
  stockfellow-net:
    driver: bridge

volumes:
  postgres_data:
  notification_postgres_data:
  alfresco_postgres_data:
  user_service_postgres_data:
  redis_data:
  activemq_data:
  alfresco_acs_data:
  alfresco_search_data:
  alfresco_share_data: