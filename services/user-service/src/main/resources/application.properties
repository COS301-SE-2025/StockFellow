# Application Configuration
spring.application.name=user-service
server.port=${SERVER_PORT:4020}

# Database Configuration - Updated for shared PostgreSQL container
# Changed from user-service-postgres to postgres-prod (your container name)
spring.datasource.url=jdbc:postgresql://user-service-postgres:5432/userservice_db
spring.datasource.username=${POSTGRES_USER:userservice_user}
spring.datasource.password=${POSTGRES_PASSWORD:userservice_pass}

# Connection Pool Configuration - Optimized for memory constraints and shared DB
spring.datasource.hikari.maximum-pool-size=8
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=900000
spring.datasource.hikari.leak-detection-threshold=30000
spring.datasource.hikari.connection-test-query=SELECT 1
spring.datasource.hikari.validation-timeout=5000
spring.datasource.hikari.pool-name=UserServiceHikariCP

# JPA/Hibernate Configuration - Optimized for performance
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=${JPA_DDL_AUTO:update}
spring.jpa.show-sql=${JPA_SHOW_SQL:false}
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.jdbc.time_zone=UTC

# Hibernate Performance Optimizations
spring.jpa.properties.hibernate.jdbc.batch_size=25
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true
spring.jpa.properties.hibernate.connection.provider_disables_autocommit=true
spring.jpa.properties.hibernate.cache.use_second_level_cache=false
spring.jpa.properties.hibernate.cache.use_query_cache=false

# JPA Validation Configuration
spring.jpa.properties.hibernate.validator.apply_to_ddl=false
spring.jpa.properties.hibernate.check_nullability=true

# Server Configuration - Memory optimized
server.tomcat.threads.max=20
server.tomcat.threads.min-spare=5
server.tomcat.max-connections=1000
server.tomcat.accept-count=50
server.tomcat.connection-timeout=20000
server.compression.enabled=true
server.compression.mime-types=application/json,application/xml,text/html,text/xml,text/plain

# Alfresco Configuration
alfresco.base-url=${ALFRESCO_BASE_URL:http://localhost:8081/alfresco}
alfresco.username=${ALFRESCO_USERNAME:admin}
alfresco.password=${ALFRESCO_PASSWORD:admin}
alfresco.site-name=${ALFRESCO_SITE_NAME:stockfellow}

# Security Configuration (for JWT validation)
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER:http://keycloak:8080/realms/stockfellow}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWKS_URI:http://keycloak:8080/realms/stockfellow/protocol/openid-connect/certs}

# Actuator Configuration - Minimal for memory savings
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when-authorized
management.endpoint.health.show-components=always
management.health.db.enabled=true
management.health.diskspace.enabled=true
management.metrics.export.prometheus.enabled=${METRICS_ENABLED:false}
management.endpoints.jmx.exposure.exclude=*

# Application Info
management.info.env.enabled=true
info.app.name=@project.name@
info.app.description=User Management Service for StockFellow
info.app.version=@project.version@
info.app.encoding=@project.build.sourceEncoding@
info.app.java.version=@java.version@

# File Upload Configuration - Reduced limits for memory savings
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=5MB
spring.servlet.multipart.max-request-size=5MB
spring.servlet.multipart.file-size-threshold=1KB

# Logging Configuration - Optimized for production
logging.level.root=${LOGGING_LEVEL_ROOT:WARN}
logging.level.com.stockfellow.userservice=${LOGGING_LEVEL_COM_STOCKFELLOW:INFO}
logging.level.org.springframework.security=${SPRING_SECURITY_LOG_LEVEL:WARN}
logging.level.org.springframework.security.web=${SPRING_SECURITY_WEB_LOG_LEVEL:WARN}
logging.level.org.hibernate.SQL=${HIBERNATE_SQL_LOG_LEVEL:WARN}
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=${HIBERNATE_BIND_LOG_LEVEL:WARN}

# Async logging pattern for better performance
logging.pattern.console=%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# Jackson Configuration - Memory optimized
spring.jackson.serialization.write-dates-as-timestamps=true
spring.jackson.time-zone=UTC
spring.jackson.default-property-inclusion=NON_NULL
spring.jackson.serialization.write-empty-json-arrays=false

# Transaction Configuration
spring.transaction.default-timeout=30

# Cache Configuration
spring.cache.type=simple

# Error Handling - Minimal for production
server.error.include-message=on-param
server.error.include-binding-errors=on-param
server.error.include-stacktrace=never
server.error.include-exception=false

# JVM and Spring Boot optimizations
spring.jmx.enabled=false
spring.main.lazy-initialization=${LAZY_INIT:false}

# HTTP Client Configuration (if using RestTemplate/WebClient)
spring.http.client.connection-timeout=5000ms
spring.http.client.read-timeout=10000ms