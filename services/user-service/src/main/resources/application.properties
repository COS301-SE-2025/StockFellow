# Application Configuration
spring.application.name=user-service
server.port=${SERVER_PORT:4020}

# Database Configuration - FIXED
spring.datasource.url=jdbc:postgresql://${USER_SERVICE_POSTGRES_HOST:user-service-postgres}:${USER_SERVICE_POSTGRES_PORT:5432}/${USER_SERVICE_POSTGRES_DB:userservice_db}
spring.datasource.username=${USER_SERVICE_POSTGRES_USER:userservice_user}
spring.datasource.password=${USER_SERVICE_POSTGRES_PASSWORD:userservice_pass}
spring.datasource.driver-class-name=org.postgresql.Driver

# ... (keep all other configuration unchanged)

# JPA/Hibernate Configuration
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=${JPA_SHOW_SQL:false}
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.jdbc.time_zone=UTC

# Connection Pool Configuration
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.leak-detection-threshold=60000
spring.datasource.hikari.connection-test-query=SELECT 1
spring.datasource.hikari.validation-timeout=1000

# JPA properties:
spring.jpa.properties.hibernate.connection.provider_disables_autocommit=true
spring.jpa.properties.hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_RELEASE_AFTER_TRANSACTION

# Validation Configuration
spring.jpa.properties.hibernate.validator.apply_to_ddl=false
spring.jpa.properties.hibernate.check_nullability=true

# Alfresco Configuration
alfresco.base-url=${ALFRESCO_BASE_URL:http://localhost:8081/alfresco}
alfresco.username=${ALFRESCO_USERNAME:admin}
alfresco.password=${ALFRESCO_PASSWORD:admin}
alfresco.site-name=${ALFRESCO_SITE_NAME:stockfellow}

# Security Configuration (for JWT validation)
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER:http://localhost:8080/realms/stockfellow}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWKS_URI:http://localhost:8080/realms/stockfellow/protocol/openid-connect/certs}

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=always
management.endpoint.health.show-components=always
management.health.db.enabled=true
management.health.diskspace.enabled=true
management.metrics.export.prometheus.enabled=true

# Application Info
management.info.env.enabled=true
info.app.name=@project.name@
info.app.description=User Management Service for StockFellow
info.app.version=@project.version@
info.app.encoding=@project.build.sourceEncoding@
info.app.java.version=@java.version@

# File Upload Configuration
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
spring.servlet.multipart.file-size-threshold=2KB

# Logging Configuration
logging.level.root=${LOGGING_LEVEL_ROOT:WARN}
logging.level.com.stockfellow.userservice=${LOGGING_LEVEL_COM_STOCKFELLOW:INFO}
logging.level.org.springframework.web=${SPRING_WEB_LOG_LEVEL:INFO}
logging.level.org.springframework.security=${SPRING_SECURITY_LOG_LEVEL:INFO}
logging.level.org.hibernate.SQL=${HIBERNATE_SQL_LOG_LEVEL:WARN}
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=${HIBERNATE_BIND_LOG_LEVEL:WARN}

# Development specific settings (override in application-dev.properties)
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# Jackson Configuration
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.time-zone=UTC

# Transaction Configuration
spring.transaction.default-timeout=30
spring.jpa.properties.hibernate.connection.provider_disables_autocommit=true

# Cache Configuration (if needed later)
spring.cache.type=simple

# Error Handling
server.error.include-message=always
server.error.include-binding-errors=always
server.error.include-stacktrace=on-param
server.error.include-exception=false


# Transaction timeout (in milliseconds)
spring.transaction.default-timeout=30

